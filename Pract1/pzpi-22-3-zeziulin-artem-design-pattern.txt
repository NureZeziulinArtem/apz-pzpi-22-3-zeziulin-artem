???????????? ?????? ? ????? ???????
??????????? ???????????? ??????????? ????????????????

????????? ????’??????? ????
??????? ?????????? ?????????






????
?? ??????????? ??????? ?1 
? ?????????? «??????????? ??????????? ????????????»
?? ????: «??????? ????????????»





                                   ??????? ??. ?? ????-22-3
                                   ??????? ????? ???????????
                                   
                                   ?????????
                                   ??. ???????? ??????? ??
                                   ???????? ???? ????????



?????? 2025

1 ??????? ????

??????????? ????????? ???? ?? ??????????104.03.20250.1???????? ?????? «????????».210.05.20250.1???????? ??????????? ?? ?????????? ???; ???????? ??????? ? ?? ?.405.06.20250.1???????? ?????????? ???????????; ???????? ??????? ?.510.06.20250.1???????? ??????? «???? ????????? ??????» ?? «????????»



2 ????????
     1. ??????????? ???????? ?? ????: «?????? (??????) ???????????? ??» (?? ????: ?????, “???. ??????? ????????????”, GoF, ???? ??????? Singletone);
     2. ???????? ?? ???????? ?????? ??????????? ????????;
     3. ???????? ?? ???????????? ?? YouTube ?????????? ????????;
     4. ???????? ?? ??????????? ?? dl.nure.ua ???? ?? ????????? ??????;
     5. ??? ??????? ???????? ?? ??????????? ? GitHub ????????? ????? ??? ?????????? ?????? ???????? ? ?????? @nure.ua;
     6. ???????? ??? ????????? ??????? ? ?????????? GitHub ??????????? i? ???????? ?? https://dl.nure.ua ?????? ?? ? ???????? ?????? main;
     7. ???????? ? ?????? ?????????? ??????????? ???? README.md ? ???????? ???? ??????? ?? ??????? ???? ?????????? ??? ??????? ???????;
     8. ???????????? ???? ? ???? ? ???????? ???????????? ??????? ?? ??????????? ??? ???? ? ?????????? Pract1 ? ??????????? GitHub;
     9. ??????????? ? ??????? ???? ????????????? ????? ?????????? ???, ???? ????????????? ? ???????? ??1.

3 ???? ????????? ??????
	??? ??? ????????? ?????????? ?????? ???????????? ??????? ???????????? ???????, ? ?????, ????? ????????, ?????? ????????????? Builder (???????????). ???? ???????? ???? ????, ?????????, ????????, ???????? ?? ???????? ?????????? ?? ????????????.
     ?? ????????? ??????????? ???? ???????? ??????????, ???? ???? ??????? ????????? ?? ????????? YouTube.

4 ????????
     ? ???? ????????? ?????????? ?????? ???? ?????????? ?????? ???????????? Builder, ???????? ?????????? ??????????? ?? ?????????? ?? ???.  


??????? ?
??????????
     
     ?????????? ???????? ?? YouTube:
     https://youtu.be/I-wTyUoIaIQ
     ????????????? ????:
00:00 ??????? 
00:11 ?????
00:29 ?? ???? ??????? ???????????? 
01:00 ???????????? ????????: ??????????, ??????????, ??????????? 
01:41 Builder: ????, ???? ?? ???? ???? ????? ??????????????? 
02:50 ????????? ??????? Builder 
03:24 ???????? ?? ???????? ??????? 
04:15 ??????? 1: ????????? ?????????? ?? HTML-????? 
05:05 ??????? 2: ????????? ????????? ??? ????????? 
05:40 ???????? 
06:10 ??????????


     ??????? ?
     ?????? ???????????


??????? ?.1 - ????????? ?????


??????? ?.2 - ?????

??????? ?.3 – ?????: ??????? ???????????? 


??????? ?.4 – ?????: ???? ???????? ???????????? 


??????? ?.5 – ?????? ???????????? Builder 


??????? ?.6 – ?????? ???????????? Builder: ???? ??????????????? 


??????? ?.7 – ?????? ???????????? Builder: ????????? 


??????? ?.8 – ?????? ???????????? Builder: ???????? ?? ???????? 


??????? ?.9 – Builder: ?????? ??????? ?????????? (??????? 1) 


??????? ?.10 – Builder: ?????? ??????? ?????????? (??????? 2) 

??????? ?.11 – Builder: ?????? ??????? ?????????? (??????? 3) 


??????? ?.12 – Builder: ?????? ??????? ?????????? (??????? 4) 

??????? ?.13 – Builder: ?????? ??????? ?????????? (??????? 1) 


??????? ?.14 – Builder: ?????? ??????? ?????????? (??????? 2) 

??????? ?.15 – Builder: ?????? ??????? ?????????? (??????? 5) 


??????? ?.16 – ???????? 

??????? ?.17 – ?????? ???????????? ?????? 


??????? ?.18 – ????? ?? ????? 


     ??????? ?
     ?????????? ??? ?????????
     
     HtmlReportBuilder.cs
       1  namespace BuilderReport
       2  {
       3      public class HtmlReportBuilder : IReportBuilder
       4      {
       5          private Report _report = new Report();
       6  
       7          public void BuildHeader()
       8          {
       9              _report.Header = "<header><h1>Report Header</h1></header>";
       10          }
       11  
       12          public void BuildBody()
       13          {
       14              _report.Body = "<main><p>This is the body of the report.</p></main>";
       15          }
       16  
       17          public void BuildFooter()
       18          {
       19              _report.Footer = "<footer><p>Report Footer</p></footer>";
       20          }
       21  
       22          public Report GetReport()
       23          {
       24              return _report;
       25          }
       26  
       27          public void Reset()
       28          {
       29              _report = new Report();
       30          }
       31      }
       32  }
     
     
     IReportBuilder.cs
       1  namespace BuilderReport
       2  {
       3      public interface IReportBuilder
       4      {
       5          void Reset();
       6          void BuildHeader();
       7          void BuildBody();
       8          void BuildFooter();
       9          Report GetReport();
       10      }
       11  }
     
     PlainTextReportBuilder.cs
       1  namespace BuilderReport
       2  {
       3      public class PlainTextReportBuilder : IReportBuilder
       4      {
       5          private Report _report = new Report();
       6  
       7          public void BuildHeader()
       8          {
       9              _report.Header = "***** Report Header *****";
       10          }
       11  
       12          public void BuildBody()
       13          {
       14              _report.Body = "This is the body of the report.";
       15          }
       16  
       17          public void BuildFooter()
       18          {
       19              _report.Footer = "***** Report Footer *****";
       20          }
       21  
       22          public Report GetReport()
       23          {
       24              return _report;
       25          }
       26  
       27          public void Reset()
       28          {
       29              _report = new Report();
       30          }
       31      }
       32  }
     
     Program.cs
       1  namespace BuilderReport
       2  {
       3      internal class Program
       4      {
       5          static void Main(string[] args)
       6          {
       7              IReportBuilder plainBuilder = new PlainTextReportBuilder();
       8              var director = new ReportDirector(plainBuilder);
       9              director.Make();
       10              var plainReport = plainBuilder.GetReport();
       11              plainReport.Show();
       12  
       13              Console.WriteLine();
       14  
       15              IReportBuilder htmlBuilder = new HtmlReportBuilder();
       16              director.ChangeBuilder(htmlBuilder);
       17              director.Make();
       18              var htmlReport = htmlBuilder.GetReport();
       19              htmlReport.Show();
       20          }
       21      }
       22  }
     
     Report.cs
       1  namespace BuilderReport
       2  {
       3      public class Report
       4      {
       5          public string Header { get; set; }
       6          public string Body { get; set; }
       7          public string Footer { get; set; }
       8  
       9          public void Show()
       10          {
       11              Console.WriteLine(Header);
       12              Console.WriteLine(Body);
       13              Console.WriteLine(Footer);
       14          }
       15      }
       16  }
     
     ReportDirector.cs
       1  namespace BuilderReport
       2  {
       3      public class ReportDirector
       4      {
       5          private IReportBuilder _builder;
       6  
       7          public ReportDirector(IReportBuilder builder)
       8          {
       9              _builder = builder;
       10          }
       11  
       12          public void ChangeBuilder(IReportBuilder builder)
       13          {
       14              _builder = builder;
       15          }
       16  
       17          public void Make()
       18          {
       19              _builder.BuildHeader();
       20              _builder.BuildBody();
       21              _builder.BuildFooter();
       22          }
       23      }
       24  }
     
     IMazeBuilder.cs
       1  namespace BuilderMaze
       2  {
       3      public interface IMazeBuilder
       4      {
       5          void AddRoom(string roomName);
       6          void AddPath(string fromRoom, string toRoom);
       7          void Reset();
       8          Maze GetMaze();
       9      }
       10  }
     
     Maze.cs
       1  namespace BuilderMaze
       2  {
       3      public class Maze
       4      {
       5          public List<string> Rooms { get; } = new();
       6          public List<string> Paths { get; } = new();
       7  
       8          public void Show()
       9          {
       10              Console.WriteLine("Rooms:");
       11              foreach (var room in Rooms)
       12                  Console.WriteLine($"- {room}");
       13  
       14              Console.WriteLine("Paths:");
       15              foreach (var path in Paths)
       16                  Console.WriteLine($"- {path}");
       17          }
       18      }
       19  }
     
     Program.cs
       1  namespace BuilderMaze
       2  {
       3      internal class Program
       4      {
       5          static void Main(string[] args)
       6          {
       7              IMazeBuilder builder = new SimpleMazeBuilder();
       8  
       9              builder.AddRoom("Entrance");
       10              builder.AddRoom("Hallway");
       11              builder.AddRoom("Treasure Room");
       12              builder.AddPath("Entrance", "Hallway");
       13              builder.AddPath("Hallway", "Treasure Room");
       14  
       15              Maze maze = builder.GetMaze();
       16              maze.Show();
       17          }
       18      }
       19  }
     
     SimpleMazeBuilder.cs
       1  namespace BuilderMaze
       2  {
       3      public class SimpleMazeBuilder : IMazeBuilder
       4      {
       5          private Maze _maze = new();
       6  
       7          public void AddRoom(string roomName)
       8          {
       9              if (!_maze.Rooms.Contains(roomName))
       10              {
       11                  _maze.Rooms.Add(roomName);
       12              }
       13          }
       14  
       15          public void AddPath(string fromRoom, string toRoom)
       16          {
       17              if (_maze.Rooms.Contains(fromRoom) && _maze.Rooms.Contains(toRoom))
       18              {
       19                  _maze.Paths.Add($"{fromRoom} <--> {toRoom}");
       20              }
       21              else
       22              {
       23                  Console.WriteLine($"Cannot create path: one or both rooms do not exist.");
       24              }
       25          }
       26  
       27          public Maze GetMaze()
       28          {
       29              return _maze;
       30          }
       31  
       32          public void Reset()
       33          {
       34              _maze = new();
       35          }
       36      }
       37  }
       
       

2


